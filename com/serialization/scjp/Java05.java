package com.serialization.scjp;


import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

/**
 * Animal
 */
class Animal {
    int i=10;
    Animal(){
        System.out.println("Animal constructor call");
    } 
}
class Dog extends Animal implements Serializable{
    int j=20;
    Dog(){
        System.out.println("Dog constructor call");
    }
    @Override
    public String toString() {
        return i+"----"+j;
    }
}
public class Java05 {
    public static void main(String[] args) throws Exception {
        Dog d1=new Dog();
        d1.i=999;
        d1.j=888;
        ObjectOutputStream oos=new ObjectOutputStream(new FileOutputStream("ser01.ser"));
        oos.writeObject(d1);

        System.out.println(d1);
        System.out.println("deserialization started");

        ObjectInputStream is=new ObjectInputStream(new FileInputStream("ser01.ser"));
        Dog d2=(Dog)is.readObject();
        System.out.println(d2);

        /*
        Output..
        Animal constructor call
        Dog constructor call
        999----888
        deserialization started
        Animal constructor call
        10----888
        */
        /*
        
        Serialization with respect to inheritance.

        class Animal implements Serializable{

        }
        class Dog extends Animal{

        } valid

        eventhough Child class doesn't implement serializable, we can serialize child class object if Parent class implements serializable interface.
        Means serializable nature is inheriting from parent to child.
        Hence if parent is serializable then by default every child is serializable.

        eg.

        In the above example,Dog class doesn't implement serializable we can serialize Dog Object because its parent Animal class implements Serializable.

        Object class doesn't implement serializable interfeace.

        case02.

        Eventhough, Parent class doesnot implement serializable, we can serialize child class object if child class implement serializable interface.Means to serialize child class Object, Parent class need not be serializable.

        At the time of serialization,JVM will check, is any variable inheriting from non-serializable parent or not.If any variable inheriting from non-serializable parent then JVM ignores original value and save default value to the file.

        At the time of deserialization, JVM will check if any parent class is non-serializable or not. If any parent class is non-serializable then JVM will execute instance Control flow in every non-serializable parent and share its instance variable to the current Object.

        While executing instance control flow of non-serializable parent,JVM will always call no-arg constructor.Hence every non-serializable class should compulsory contain no-arg constructor.It may be default constructor generated by compiler or customized constructor explicitly provided by the programmer.

        Otherwise we will get the RTE : InvalidClassException.

        class Animal{
            int i=10;
            Animal(){
                SOP("Animal Constructor called");
            }
        }
        class Dog extends Animal implements Serializable{

        }

        




        */
    }
}
