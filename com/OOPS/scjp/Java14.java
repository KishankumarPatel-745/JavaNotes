package com.OOPS.scjp;

public class Java14 {
    public static void main(String[] args) {
        /*
        ********CONSTRUCTOR*******

        Once we create an object compulsory we should perform initialization then only the object is in position to response properly.

       

        Whenever we are creating an object some piece of the code executed automatically to perform initialtization of an object. This piece of code is nothing but constructor.
        Hence constructor is used to initialize an object.

        class Student {
            String name;
            int rollNo;
        Student(String name,int rollNo){
                this.name=name;
                this.rollNo=rollNo;
        }
        main(){
            Student s1=new Student("Kishna",101);
            Student s2=new Student("Jinal",102);
        }
        }

        NOTE:
        The main purpose of constructor is to perform initialization of an object but not to create an object.

        Difference between constructor and instance block.

        ANS:
        The main purpose of constructor is to perform initialization of an object.
        But other then initialization if we want to perform any activity for every object creation then we should go for instance block(like updating one entry in DB for every object creation or incrementing count value for every object creation.)

        Both constructor and instance block have their own different purposes and replacing one concept with another concept may not work always.

        Both constructor and instance block will be executed for every object creation but instance block first followed by constructor.

        DEmo programm to print number of object created for class
        class Test{
            static int count=0;
            {
                count++;
            }
            Test(){
                
            }
            Test(int i){

            }
            Test(double d){

            }
            main(){
                Test t1=new Test();
                Test t2=new Test(10);
                Test t3=new Test(10.2);
                SOP("Num of Objects created :"+count)
            }
        }

        RULE OF WRITING Constructor.

        01,
        Name of the class and name of the constructor must be matched.

        02,
        Return type concept is not applicable for constructor even void also.

        03,
        By mistake if we are trying to declare return type for the constructor then we won't get any compile time error but compiler trits it as a method.

        HEnce it is legal(but stupid) to a method whose name is exactly same as class name.
        eg
        class Test{
            void Test(){
                SOP("method but not constructor");
            }
            main(){
                Test t=new Test();
                t.Test();
            }
        }

        04,
        The only applicable modifiers for constructor are public, private ,protected, default if we are trying to use any other modifier we will get CTE.

        eg.
        class Test{
            static Test(){

            }
        }

        CTE:modifier static not allowed here.


        Default Constructor.
        Compiler is responsible to generate Default constructor but not JVM.

        If we are not writing any constructor then only compiler will generate default constructor.
        Means if we are writing at least one constructor then compiler won't generate default constructor Hence every class in java contains constructor it maybe default constructor generated by compiler or customized constructor explicitly provided by programmer but not both simantaneously.
        



        */
    }
}
